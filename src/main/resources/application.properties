
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection

spring.datasource.url = jdbc:mysql://remotemysql.com/DAIR2a2a0E?useSSL=false


#docker run --name grafik -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -e MYSQL_USER=root -e MYSQL_PASSWORD=rooT  -d mysql latest

# Username and password
spring.datasource.username = DAIR2a2a0E
spring.datasource.password =  P0Hk9RwvZi

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#App properties
taco.orders.pageSize = 10
 spring.profiles.include=prod

discount.codes.abcdef=10


logging.level.tacos= WARN